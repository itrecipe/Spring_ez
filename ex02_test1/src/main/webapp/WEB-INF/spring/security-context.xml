<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- customAccessDenied 클래스를 bean으로 설정 해준다. (권한없는 페이지에 접근시 처리한다.) -->
	<bean id="customAccessDenied" class="org.ezen.ex02.security.CustomAccessDeniedHandler"></bean>
	
	<!-- 암호화처리 빈으로 등록해야 회원 창에서 사용 가능 -->
	<!--  <bean id="bcryptpasswordEncoder" class="org.springframework.security"></bean> -->
	
	<security:http auto-config="true" use-expressions="true">
	<!-- auto-config, use-expressiondms default가 모두 true라서 생략해도 된다고 한다. -->
	<!-- use-expression true는 access속성값을 security 표현 언어인 EL을 사용한다. -->
	<!-- pattern 속성은 요청 경로를 access는 권한을 표시한다. -->
		
		<security:intercept-url pattern="/board/list" access="permitAll"/>
	
		<security:intercept-url pattern="/board/register" access="hasAnyRole('ROLE_MEMBER', 'ROLE_MANAGER', 'ROLE_ADMIN')"/>
		
		<!-- 클래스로 설정한 access-denied-handler 설정 -->
		<security:access-denied-handler ref="customAccessDenied"/>
		
		<!-- error-page속성 사용법 -->
		<!-- 
		<security:access-denied-handler error-page="/member/accessError"/>		
		 -->

		<!-- 스프링 시큐리트 자체 제공 로그인 페이지 -->
		<!--  
		<security:form-login/>
		-->
		
		<!-- 사용자가 만드는 로그인 페이지를 지정한다, 로그인없이 접속 시도한 페이지로 로그인 성공후 이동한다. -->
		<security:form-login login-page="/member/customLogin"/>
		
		<!-- 로그인 성공후 사용자가 만드는 처리 클래스를 사용하는 방식, AuthenticationSuccessHandler인터페이스를 구현한 클래스를 만들어서 사용한다. 
		 <security:form-login login-page="/member/customLogin" authentication-success-handler-ref="customLoginSuccess"/>
		 -->
		
		<security:csrf disabled="true"/>
		
		<!-- 로그인 상태 유지 기능 -->
		<!--  
		<security:remember-me token-validity-seconds="3600"/>
		-->
		
		<security:logout logout-url="/member/customLogout" invalidate-session="true"/>
	
	</security:http>

	<security:authentication-manager>
	</security:authentication-manager>
</beans>